class DeviseCreateUsers < ActiveRecord::Migration

=begin - COMES FROM DCS FOR NOW

  # The largest text column available in all supported RDBMS is
  # 1024^3 - 1 bytes, roughly one gibibyte.  We specify a size
  # so that MySQL will use `longtext` instead of `text`.  Otherwise,
  # when serializing very large objects, `text` might not be big enough.
  TEXT_BYTES = 1_073_741_823

  db_adapter = ActiveRecord::Base.connection.instance_values["config"][:adapter]
  is_postgres_adapter = db_adapter.in? %w[postgres postgis]

  def self.up

    create_table(:dsc_users) do |t|

      if is_postgres_adapter
        t.citext :email, null: false, default: "", limit: 255
      else
        # account for the dummy rspec app using sqlite3
        t.string :email, null: false, default: "", limit: 255
      end


      t.string :encrypted_password, null: false, default: ""

      ## Recoverable
      if is_postgres_adapter
        t.citext :reset_password_token
      else
        # account for the dummy rspec app using sqlite3
        t.string :reset_password_token
      end

      t.datetime :reset_password_sent_at

      ## Trackable
      t.integer  :sign_in_count, default: 0, null: false

      if is_postgres_adapter
        t.inet   :current_sign_in_ip
        t.inet   :last_sign_in_ip
      else
        # account for the dummy rspec app using sqlite3
        t.string   :current_sign_in_ip
        t.string   :last_sign_in_ip
      end

      t.timestamps null: false
    end

    add_index :dsc_users, :email,                unique: true
    add_index :dsc_users, :reset_password_token, unique: true

    create_table(:dsc_roles) do |t|
      t.string :name
      t.references :resource, polymorphic: true

      t.timestamps null: false
    end

    create_table :dsc_users_roles, id: false do |t|
      t.references :user
      t.references :role
    end

    add_index :dsc_roles, :name
    add_index :dsc_roles, [:name, :resource_type, :resource_id]
    add_index :dsc_users_roles, [:user_id, :role_id]

    add_foreign_key :dsc_users_roles, :dsc_users, column: 'user_id'
    add_foreign_key :dsc_users_roles, :dsc_roles, column: 'role_id'

    add_column :dsc_users, :role_names, :string


    create_table :dsc_user_versions do |t|
      t.string   :item_type, :null => false
      t.integer  :item_id,   :null => false
      t.string   :event,     :null => false
      t.string   :whodunnit
      t.text     :object,    :limit => TEXT_BYTES
      t.datetime :created_at
    end
    add_index :dsc_user_versions, [:item_type, :item_id]

  end

  def self.down
    # By default, we don't want to make any assumption about how to roll back a migration when your
    # model already existed. Please edit below which fields you would like to remove in this migration.
    raise ActiveRecord::IrreversibleMigration
  end

=end
end
